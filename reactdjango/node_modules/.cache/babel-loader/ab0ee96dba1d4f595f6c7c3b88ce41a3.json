{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\Ticketlist.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_Ticket = gql`\n query{\n  allTicket{\n    firstname,\n    lastname,\n    phone,\n    routes{\n      name\n    }\n    departureTime,\n    seat\n  }\n}\n`;\n\nfunction Ticketlist() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_Ticket, {\n    pollInterval: 500 // refetch the result every 0.5 second\n\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 22\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"something went wrong \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"firstname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"lastname\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"phone\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"routes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"departure time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"seat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this), data.allTicket.map(ticket => {\n        return;\n\n        /*#__PURE__*/\n        _jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.lastname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.routes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.departure_time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: ticket.seat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this);\n      }), \"}\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Ticketlist, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Ticketlist;\nexport default Ticketlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ticketlist\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/Ticketlist.js"],"names":["React","useQuery","gql","Link","QUERY_Ticket","Ticketlist","data","loading","error","pollInterval","allTicket","map","ticket","firstname","lastname","phone","routes","departure_time","seat"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAY,GAAEF,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;;AAcA,SAASG,UAAT,GAAsB;AAAA;;AACrB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CACtCG,YADsC,EACxB;AACXK,IAAAA,YAAY,EAAE,GADH,CACO;;AADP,GADwB,CAAzC;AAKA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,sBACC;AAAA,2BACC;AAAA,8BACM;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,EASQF,IAAI,CAACI,SAAL,CAAeC,GAAf,CAAmBC,MAAM,IAAE;AAC1B;;AACA;AAAA;AAAA,kCACC;AAAA,sBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA,sBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA,sBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAHD,eAIC;AAAA,sBAAKH,MAAM,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAJD,eAKC;AAAA,sBAAKJ,MAAM,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,kBALD,eAMC;AAAA,sBAAKL,MAAM,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAQD,OAVA,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AA2BA;;GAnCQb,U;UACyBJ,Q;;;KADzBI,U;AAqCT,eAAeA,UAAf","sourcesContent":["import React from 'react'\r\nimport {useQuery, gql} from \"@apollo/client\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst QUERY_Ticket= gql`\r\n query{\r\n  allTicket{\r\n    firstname,\r\n    lastname,\r\n    phone,\r\n    routes{\r\n      name\r\n    }\r\n    departureTime,\r\n    seat\r\n  }\r\n}\r\n`;\r\nfunction Ticketlist() {\r\n\tconst { data, loading, error } = useQuery(\r\n\t   QUERY_Ticket, {\r\n\t      pollInterval: 500 // refetch the result every 0.5 second\r\n\t    }\r\n\t  );\r\n\tif (loading) return <p>Loading...</p>;\r\n  \tif (error) return <p>something went wrong </p>;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<table>\r\n        \t<tr>\r\n\t        \t<th>firstname</th>\r\n\t        \t<th>lastname</th>\r\n\t            <th>phone</th>\r\n\t            <th>routes</th>\r\n\t            <th>departure time</th>\r\n\t            <th>seat</th>\r\n        \t</tr>\r\n          {data.allTicket.map(ticket=>{\r\n            return\r\n            <tr>\r\n\t            <td>{ticket.firstname}</td>\r\n\t            <td>{ticket.lastname}</td>\r\n\t            <td>{ticket.phone}</td>\r\n\t            <td>{ticket.routes}</td>\r\n\t            <td>{ticket.departure_time}</td>\r\n\t            <td>{ticket.seat}</td>\r\n          \t</tr>\r\n          })}\r\n}\r\n        </table> \r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Ticketlist"]},"metadata":{},"sourceType":"module"}