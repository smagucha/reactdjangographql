{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\AddRoute.js\";\nimport React from 'react';\nimport { useState } from \"react\";\nimport { useMutation, gql } from '@apollo/client';\nimport './static/css/form.css'; // const CREATE_ROUTE = gql`\n// mutation createRoute ($name: String!, $From: String!,$To: String!){\n// \tcreateRoute (name: $name, From: $From, To:$To){\n// \t  id,\n// \t  name,\n// \t  From,\n// \t  To\n// \t}\n// }`\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddRoute() {\n  // const [name, setName] = useState(\"\")\n  // const [From, setFrom] = useState(\"\");\n  // const [To, setTo] = useState(\"\");\n  // const [createRoute, { loading, error }] = useMutation(CREATE_ROUTE);\n  // function handleCreateRoad(event) {\n  //     createRoute({ variables: { name, From, To} });\n  //     event.preventDefault();\n  //  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"add road sam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n_c = AddRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRoute\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/AddRoute.js"],"names":["React","useState","useMutation","gql","AddRoute"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,GAAtB,QAAiC,gBAAjC;AACA,OAAO,uBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAClC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA,sBACC;AAAA,2BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;KAxBuBA,Q","sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\"\r\nimport { useMutation, gql } from '@apollo/client'\r\nimport './static/css/form.css'\r\n\r\n// const CREATE_ROUTE = gql`\r\n// mutation createRoute ($name: String!, $From: String!,$To: String!){\r\n// \tcreateRoute (name: $name, From: $From, To:$To){\r\n// \t  id,\r\n// \t  name,\r\n// \t  From,\r\n// \t  To\r\n// \t}\r\n// }`\r\n\r\nexport default function AddRoute() {\r\n\t// const [name, setName] = useState(\"\")\r\n\t// const [From, setFrom] = useState(\"\");\r\n\t// const [To, setTo] = useState(\"\");\r\n\t// const [createRoute, { loading, error }] = useMutation(CREATE_ROUTE);\r\n\r\n\t// function handleCreateRoad(event) {\r\n\t//     createRoute({ variables: { name, From, To} });\r\n\t//     event.preventDefault();\r\n //  }\r\n\treturn (\r\n\t\t<div>\r\n\t\t<h1>add road sam</h1>\r\n      \t{/*<form onSubmit={handleCreateRoad}>\r\n        \t<input type=\"text\" onChange={(event) => setName(event.target.value)} />\r\n        \t<input type=\"text\" onChange={(event) => setFrom(event.target.value)} />\r\n        \t<input type=\"text\" onChange={(event) => setTo(event.target.value)} />\r\n        \t<button disabled={loading} type=\"submit\">\r\n          \t\tSubmit\r\n        \t</button>\r\n        \t{error && <p>{error.message}</p>}\r\n      </form>\t\t*/}\t\r\n\t\t</div>\r\n\t)\r\n}"]},"metadata":{},"sourceType":"module"}