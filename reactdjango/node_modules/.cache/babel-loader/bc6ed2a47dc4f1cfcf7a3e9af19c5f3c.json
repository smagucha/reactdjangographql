{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\UpdateMovie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport './static/css/form.css';\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateMovie() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const QUERY_MOVIES = gql`\n    query{\n      movieById(id:${id}){\n        id,\n        name,\n        description\n      }\n      }\n       `;\n  const UPDATE_MOVIE = gql`\n        mutation updateMovie($id:Int, $name: String, $description: Stirng){\n          updateMovie(id:$id, name:$name, description:$description){\n            movie{\n              id\n              name\n              description          \n            }\n          }\n      }\n    `;\n  const {\n    data,\n    error\n  } = useQuery(QUERY_MOVIES, {\n    variables: {\n      id\n    }\n  });\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [updateMOVIE] = useMutation(UPDATE_MOVIE);\n\n  function handleUpdateMovie(event) {\n    event.preventDefault();\n    updateMOVIE({\n      variables: {\n        id,\n        name,\n        description\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdateMovie,\n      action: \"/\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateMovie, \"hTin0P9viepigkFocmCIm8z7NI0=\", false, function () {\n  return [useParams, useQuery, useMutation];\n});\n\n_c = UpdateMovie;\nexport default UpdateMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMovie\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/UpdateMovie.js"],"names":["React","useState","useQuery","gql","useMutation","useParams","UpdateMovie","id","QUERY_MOVIES","UPDATE_MOVIE","data","error","variables","name","setName","description","setDescription","updateMOVIE","handleUpdateMovie","event","preventDefault","target","value","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,uBAAP;AACA,SAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,WAAvB,QAAyC,gBAAzC;AACA,SAASC,SAAT,QAAyB,cAAzB;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAMG,YAAY,GAAGL,GAAI;AAC3B;AACA,qBAAqBI,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA,QARE;AASE,QAAME,YAAY,GAAGN,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAVI;AAYF,QAAM;AAACO,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAeT,QAAQ,CAACM,YAAD,EAAc;AAAEI,IAAAA,SAAS,EAAE;AAAEL,MAAAA;AAAF;AAAb,GAAd,CAA7B;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,WAAD,IAAgBb,WAAW,CAACK,YAAD,CAAjC;;AAEA,WAASS,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,WAAW,CAAC;AAAEL,MAAAA,SAAS,EAAE;AAAEL,QAAAA,EAAF;AAAMM,QAAAA,IAAN;AAAYE,QAAAA;AAAZ;AAAb,KAAD,CAAX;AACD;;AAEC,sBACA;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEG,iBAAhB;AAAmC,MAAA,MAAM,EAAC,GAA1C;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,QAAQ,EAAGC,KAAD,IAAWL,OAAO,CAACK,KAAK,CAACE,MAAN,CAAaC,KAAd;AAAhD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGH,KAAD,IAAWH,cAAc,CAACG,KAAK,CAACE,MAAN,CAAaC,KAAd;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAOGX,KAAK,iBAAI;AAAA,kBAAIA,KAAK,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,cAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAaH;;GA9CQjB,W;UACQD,S,EAsBMH,Q,EAGCE,W;;;KA1BfE,W;AAgDT,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from \"react\";\r\nimport './static/css/form.css'\r\nimport {useQuery, gql, useMutation} from \"@apollo/client\";\r\nimport { useParams} from \"react-router\"\r\nfunction UpdateMovie() {\r\n  const { id } = useParams();\r\n  const QUERY_MOVIES = gql`\r\n    query{\r\n      movieById(id:${id}){\r\n        id,\r\n        name,\r\n        description\r\n      }\r\n      }\r\n       `;\r\n    const UPDATE_MOVIE = gql`\r\n        mutation updateMovie($id:Int, $name: String, $description: Stirng){\r\n          updateMovie(id:$id, name:$name, description:$description){\r\n            movie{\r\n              id\r\n              name\r\n              description          \r\n            }\r\n          }\r\n      }\r\n    `;\r\n\r\n  const {data, error} =useQuery(QUERY_MOVIES,{ variables: { id } })\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [updateMOVIE] = useMutation(UPDATE_MOVIE);\r\n  \r\n  function handleUpdateMovie(event) {\r\n    event.preventDefault();\r\n    updateMOVIE({ variables: { id, name, description } });\r\n  }\r\n\r\n    return (\r\n    <div>\r\n      <form onSubmit={handleUpdateMovie} action=\"/\">\r\n        <input type=\"text\"  onChange={(event) => setName(event.target.value)} />\r\n        <input type=\"text\" onChange={(event) => setDescription(event.target.value)} />\r\n        <button type=\"submit\">\r\n          Submit\r\n        </button>\r\n        \r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateMovie\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}