{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\BusRoutes.js\",\n    _s = $RefreshSig$();\n\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ROUTES = gql`\nquery{\n  allRoutes{\n    name,\n    From,\n    To\n    \n  }\n}\n`;\n\nfunction BusRoutes() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(QUERY_ROUTES, {\n    pollInterval: 500 // refetch the result every 0.5 second\n\n  }); // should handle loading status\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"something went wrong \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello LIST routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/AddRoute\",\n      children: \"Add routes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"From\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"To\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 10\n      }, this), data.allRoutes.map(road => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: road.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: road.From\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: road.To\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/DeleteRoute/${road.id}`,\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BusRoutes, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = BusRoutes;\nexport default BusRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"BusRoutes\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/BusRoutes.js"],"names":["useQuery","gql","Link","QUERY_ROUTES","BusRoutes","data","loading","error","pollInterval","allRoutes","map","road","name","From","To","id"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,YAAY,GAAGF,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAUA,SAASG,SAAT,GAAoB;AAAA;;AACpB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CACtCG,YADsC,EACxB;AACXK,IAAAA,YAAY,EAAE,GADH,CACO;;AADP,GADwB,CAAzC,CADoB,CAMlB;;AACA,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGZ,sBACC;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGC;AAAA,8BACM;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADN,EAOQF,IAAI,CAACI,SAAL,CAAeC,GAAf,CAAmBC,IAAI,IAAE;AACxB,4BAAO;AAAA,kCACP;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADO,eAEP;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFO,eAGP;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBAHO,eAIP;AAAA,mCACC,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,gBAAeH,IAAI,CAACI,EAAG,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,kBAJO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAUD,OAXA,CAPR;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA4BA;;GAvCQX,S;UACwBJ,Q;;;KADxBI,S;AAyCT,eAAeA,SAAf","sourcesContent":["import {useQuery, gql} from \"@apollo/client\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst QUERY_ROUTES = gql`\r\nquery{\r\n  allRoutes{\r\n    name,\r\n    From,\r\n    To\r\n    \r\n  }\r\n}\r\n`;\r\nfunction BusRoutes(){\r\nconst { data, loading, error } = useQuery(\r\n   QUERY_ROUTES, {\r\n      pollInterval: 500 // refetch the result every 0.5 second\r\n    }\r\n  );\r\n  // should handle loading status\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>something went wrong </p>;\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t<h1>Hello LIST routes</h1>\r\n\t\t<Link to=\"/AddRoute\">Add routes</Link>\r\n\t\t\t<table>\r\n        \t<tr>\r\n        \t\t<th>name</th>\r\n        \t\t<th>From</th>\r\n        \t\t<th>To</th>\r\n        \t\t<th>delete</th>\r\n        \t</tr>\r\n          {data.allRoutes.map(road=>{\r\n            return <tr>\r\n            <td>{road.name}</td>\r\n            <td>{road.From}</td>\r\n            <td>{road.To}</td>\r\n            <td>\r\n            \t<Link to={`/DeleteRoute/${road.id}`}>\r\n                  delete\r\n              </Link>\r\n            </td>\r\n          </tr>\r\n          })}\r\n\r\n        </table>  \r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default BusRoutes"]},"metadata":{},"sourceType":"module"}