{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\DeleteMovie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useMutation, gql } from '@apollo/client';\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeleteMovie() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const QUERY_MOVIES = gql`\n\t\tquery{\n\t\t\tmovieById(id:${id}){\n\t\t\t\tid,\n\t\t\t\tname,\n\t\t\t\tdescription\n\t\t\t}\n\t\t\t}\n\t\t\t `;\n  const DELETE_MOVIE = gql`\n\t  mutation deleteTodo(\n\t    $id: ID!\n\t  ) {\n\t    deleteMovie(\n\t      id: $id\n\t    ) {\n\t      id\n\t    }\n\t  }\n\t`;\n  const [deleteMovie, {\n    loading,\n    error\n  }] = useMutation(DELETE_MOVIE);\n\n  const updateCache = client => {\n    const data = client.readQuery({\n      query: QUERY_MOVIES,\n      variables: {\n        id\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"hello world\", data.id, data.name, data.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this);\n  };\n}\n\n_s(DeleteMovie, \"93OVMw2tgw7tPD5PZRf8lzFPpls=\", false, function () {\n  return [useParams, useMutation];\n});\n\n_c = DeleteMovie;\nexport default DeleteMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteMovie\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/DeleteMovie.js"],"names":["React","useMutation","gql","useParams","DeleteMovie","id","QUERY_MOVIES","DELETE_MOVIE","deleteMovie","loading","error","updateCache","client","data","readQuery","query","variables","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,GAArB,QAAgC,gBAAhC;AACA,SAASC,SAAT,QAAyB,cAAzB;;;AAGA,SAASC,WAAT,GAAwB;AAAA;;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAMG,YAAY,GAAGJ,GAAI;AAC1B;AACA,kBAAkBG,EAAG;AACrB;AACA;AACA;AACA;AACA;AACA,KARC;AAUA,QAAME,YAAY,GAAGL,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAVC;AAWA,QAAM,CAACM,WAAD,EAAc;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAd,IAAoCT,WAAW,CAACM,YAAD,CAArD;;AACA,QAAMI,WAAW,GAAIC,MAAD,IAAY;AAC3B,UAAMC,IAAI,GAAGD,MAAM,CAACE,SAAP,CAAiB;AAC7BC,MAAAA,KAAK,EAAET,YADsB;AAE7BU,MAAAA,SAAS,EAAE;AACTX,QAAAA;AADS;AAFkB,KAAjB,CAAb;AAMJ,wBACE;AAAA,gCAEEQ,IAAI,CAACR,EAFP,EAGEQ,IAAI,CAACI,IAHP,EAIEJ,IAAI,CAACK,WAJP;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAfA;AAgBA;;GAxCQd,W;UACOD,S,EAsB2BF,W;;;KAvBlCG,W;AAyCT,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport {useMutation, gql } from '@apollo/client'\r\nimport { useParams} from \"react-router\"\r\n\r\n\r\nfunction DeleteMovie () {\r\n\tconst { id } = useParams();\r\n\tconst QUERY_MOVIES = gql`\r\n\t\tquery{\r\n\t\t\tmovieById(id:${id}){\r\n\t\t\t\tid,\r\n\t\t\t\tname,\r\n\t\t\t\tdescription\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t\t `;\r\n\t\r\n\tconst DELETE_MOVIE = gql`\r\n\t  mutation deleteTodo(\r\n\t    $id: ID!\r\n\t  ) {\r\n\t    deleteMovie(\r\n\t      id: $id\r\n\t    ) {\r\n\t      id\r\n\t    }\r\n\t  }\r\n\t`;\r\n\tconst [deleteMovie, { loading, error }] = useMutation(DELETE_MOVIE);\r\n\tconst updateCache = (client) => {\r\n      const data = client.readQuery({\r\n       query: QUERY_MOVIES,\r\n       variables: {\r\n         id,\r\n       }\r\n      });\r\n  return (\r\n    <div>\r\n    \thello world\r\n    \t{data.id}\r\n    \t{data.name}\r\n    \t{data.description}\r\n    </div>\r\n  );\r\n};\r\n}\r\nexport default DeleteMovie;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}