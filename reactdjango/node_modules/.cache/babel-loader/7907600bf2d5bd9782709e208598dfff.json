{"ast":null,"code":"import { useMutation, useQuery, gql } from '@apollo/client';\nconst UPDATE_Movie = gql`\n  mutation{\n  updateMovie($id: Int!, $name: String!, $description: String!){\n    updateMovie(id: $id, name: $name,description: $description) {\n    movie{\n      name,\n      description\n    }\n  }\n}\n}\n`; // function UpdateMovie() {\n//   const { loading, error, data } = useQuery(UPDATE_Movie);\n//   const [updateMovie] = useMutation(UPDATE_Movie);\n//   if (loading) return <p>Loading...</p>;\n//   if (error) return <p>Error :(</p>;\n//   return data.updateMovie.map(({ id, name, description }) => {\n//     let input;\n//     return (\n//       <div key={id}>\n//         <p>{name}</p>\n//         <form\n//           onSubmit={e => {\n//             e.preventDefault();\n//             updateMovie({ variables: { id, type: input.value } });\n//             input.value = '';\n//           }}\n//         >\n//           <input\n//             ref={node => {\n//               input = node;\n//             }}\n//           />\n//             <input\n//             ref={node => {\n//               input = node;\n//             }}\n//           />\n//           <button type=\"submit\">Update Movie</button>\n//         </form>\n//       </div>\n//     );\n//   });\n// }\n// export default UpdateMovie","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/UpdateMovie.js"],"names":["useMutation","useQuery","gql","UPDATE_Movie"],"mappings":"AAAA,SAASA,WAAT,EAAqBC,QAArB,EAA+BC,GAA/B,QAA0C,gBAA1C;AACA,MAAMC,YAAY,GAAGD,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA,C,CAcA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { useMutation,useQuery, gql } from '@apollo/client';\r\nconst UPDATE_Movie = gql`\r\n  mutation{\r\n  updateMovie($id: Int!, $name: String!, $description: String!){\r\n    updateMovie(id: $id, name: $name,description: $description) {\r\n    movie{\r\n      name,\r\n      description\r\n    }\r\n  }\r\n}\r\n}\r\n`;\r\n\r\n\r\n// function UpdateMovie() {\r\n//   const { loading, error, data } = useQuery(UPDATE_Movie);\r\n//   const [updateMovie] = useMutation(UPDATE_Movie);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n//   if (error) return <p>Error :(</p>;\r\n\r\n//   return data.updateMovie.map(({ id, name, description }) => {\r\n//     let input;\r\n\r\n//     return (\r\n//       <div key={id}>\r\n//         <p>{name}</p>\r\n//         <form\r\n//           onSubmit={e => {\r\n//             e.preventDefault();\r\n//             updateMovie({ variables: { id, type: input.value } });\r\n\r\n//             input.value = '';\r\n//           }}\r\n//         >\r\n//           <input\r\n//             ref={node => {\r\n//               input = node;\r\n//             }}\r\n//           />\r\n//             <input\r\n//             ref={node => {\r\n//               input = node;\r\n//             }}\r\n//           />\r\n//           <button type=\"submit\">Update Movie</button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   });\r\n// }\r\n\r\n// export default UpdateMovie"]},"metadata":{},"sourceType":"module"}