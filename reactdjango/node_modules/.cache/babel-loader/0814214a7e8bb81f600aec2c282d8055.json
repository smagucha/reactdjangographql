{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\MovieDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { gql, useQuery } from '@apollo/client';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = () => {\n  _s();\n\n  const {\n    id\n  } = useParams(); // const QUERY_MOVIES = gql`\n  // \tquery{\n  // \t\tmovieById(id:${id}){\n  // \t\t\tid,\n  // \t\t\tname,\n  // \t\t\tdescription\n  // \t\t}\n  // \t\t}\n  // \t\t `;\n  // const {data, error, loading} =useQuery(QUERY_MOVIES,\n  // \t{ variables: { id } })\n  // if (loading) return <p>Loading...</p>;\n  // if (error) return <p>something went wrong </p>;\n  // console.log({id})\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"hello \", id]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MovieDetail, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/MovieDetail.js"],"names":["React","gql","useQuery","useParams","MovieDetail","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,SAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,WAAW,GAAE,MAAI;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB,CADsB,CAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAA,yBAAYE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CApBD;;GAAMD,W;UACUD,S;;;KADVC,W;AAuBN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport { useParams} from \"react-router-dom\";\r\n\r\nconst MovieDetail =()=>{\r\n\tconst { id } = useParams();\r\n\t// const QUERY_MOVIES = gql`\r\n\t// \tquery{\r\n\t// \t\tmovieById(id:${id}){\r\n\t// \t\t\tid,\r\n\t// \t\t\tname,\r\n\t// \t\t\tdescription\r\n\t// \t\t}\r\n\t// \t\t}\r\n\t// \t\t `;\r\n\t// const {data, error, loading} =useQuery(QUERY_MOVIES,\r\n\t// \t{ variables: { id } })\r\n\t// if (loading) return <p>Loading...</p>;\r\n\t// if (error) return <p>something went wrong </p>;\r\n\t// console.log({id})\r\n\t\r\n\treturn (\r\n\t\t<div>hello {id}</div>\r\n\t\t)\r\n}\r\n\r\n\r\nexport default MovieDetail\r\n\r\n\r\n\r\n         \r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}