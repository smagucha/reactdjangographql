{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\UpdateMovie.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UPDATE_TODO = gql`\n  mutation{\n  updateMovie($id: Int!, $name: String!, $description: String!){\n    updateTodo(id: $id, name: $name,description: $description) {\n    movie{\n      name,\n      description\n    }\n  }\n}\n}\n`;\n\nfunction UpdateMovie() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_TODOS);\n  const [updateTodo] = useMutation(UPDATE_TODO);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Error :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  return data.todos.map(_ref => {\n    let {\n      id,\n      name,\n      description\n    } = _ref;\n    let input;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          updateTodo({\n            variables: {\n              id,\n              type: input.value\n            }\n          });\n          input.value = '';\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: node => {\n            input = node;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: node => {\n            input = node;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Update Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  });\n}\n\n_s(UpdateMovie, \"fbkovNNnWB9e30Lni1bb3ZubTHA=\", true);\n\n_c = UpdateMovie;\nexport default UpdateMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMovie\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/UpdateMovie.js"],"names":["UPDATE_TODO","gql","UpdateMovie","loading","error","data","useQuery","GET_TODOS","updateTodo","useMutation","todos","map","id","name","description","input","type","e","preventDefault","variables","value","node"],"mappings":";;;;AAAA,MAAMA,WAAW,GAAGC,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;;AAaA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BC,QAAQ,CAACC,SAAD,CAAzC;AACA,QAAM,CAACC,UAAD,IAAeC,WAAW,CAACT,WAAD,CAAhC;AAEA,MAAIG,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,SAAOC,IAAI,CAACK,KAAL,CAAWC,GAAX,CAAe,QAA+B;AAAA,QAA9B;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,KAA8B;AACnD,QAAIC,KAAJ;AAEA,wBACE;AAAA,8BACE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,QAAQ,EAAEC,CAAC,IAAI;AACbA,UAAAA,CAAC,CAACC,cAAF;AACAV,UAAAA,UAAU,CAAC;AAAEW,YAAAA,SAAS,EAAE;AAAEP,cAAAA,EAAF;AAAMI,cAAAA,IAAI,EAAED,KAAK,CAACK;AAAlB;AAAb,WAAD,CAAV;AAEAL,UAAAA,KAAK,CAACK,KAAN,GAAc,EAAd;AACD,SANH;AAAA,gCAQE;AACE,UAAA,GAAG,EAAEC,IAAI,IAAI;AACXN,YAAAA,KAAK,GAAGM,IAAR;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,gBARF,eAaI;AACA,UAAA,GAAG,EAAEA,IAAI,IAAI;AACXN,YAAAA,KAAK,GAAGM,IAAR;AACD;AAHD;AAAA;AAAA;AAAA;AAAA,gBAbJ,eAkBE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUT,EAAV;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD,GA5BM,CAAP;AA6BD;;GApCQV,W;;KAAAA,W;AAsCT,eAAeA,WAAf","sourcesContent":["const UPDATE_TODO = gql`\r\n  mutation{\r\n  updateMovie($id: Int!, $name: String!, $description: String!){\r\n    updateTodo(id: $id, name: $name,description: $description) {\r\n    movie{\r\n      name,\r\n      description\r\n    }\r\n  }\r\n}\r\n}\r\n`;\r\n\r\nfunction UpdateMovie() {\r\n  const { loading, error, data } = useQuery(GET_TODOS);\r\n  const [updateTodo] = useMutation(UPDATE_TODO);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return data.todos.map(({ id, name, description }) => {\r\n    let input;\r\n\r\n    return (\r\n      <div key={id}>\r\n        <p>{type}</p>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            updateTodo({ variables: { id, type: input.value } });\r\n\r\n            input.value = '';\r\n          }}\r\n        >\r\n          <input\r\n            ref={node => {\r\n              input = node;\r\n            }}\r\n          />\r\n            <input\r\n            ref={node => {\r\n              input = node;\r\n            }}\r\n          />\r\n          <button type=\"submit\">Update Todo</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default UpdateMovie"]},"metadata":{},"sourceType":"module"}