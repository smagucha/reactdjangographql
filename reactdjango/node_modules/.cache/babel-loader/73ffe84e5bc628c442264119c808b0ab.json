{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\UpdateMovie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from \"react\";\nimport './static/css/form.css';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateMovie() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const QUERY_MOVIES = gql`\n    query{\n      movieById(id:${id}){\n        id,\n        name,\n        description\n      }\n      }\n       `;\n  const UPDATE_MOVIE = gql`\n      mutation updatemovie($id:Int, $name: String, $description: Stirng){\n        UpdateMovie(id:$id, name:$name, description:$description){\n          movie{\n            id\n            name\n            description          }\n        }\n      }\n    `;\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(QUERY_MOVIES, {\n    variables: {\n      id\n    }\n  });\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [updateMOVIE] = useMutation(UPDATE_MOVIE);\n\n  function handleUpdateMovie(event) {\n    event.preventDefault();\n    updateMOVIE({\n      variables: {\n        id,\n        name,\n        description\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdateMovie,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: data.movieById.name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        defaultValue: data.movieById.description,\n        onChange: event => setDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateMovie, \"v4UUeJSDqF5PKGdQdQ48YgCKJsY=\", true, function () {\n  return [useParams, useQuery];\n});\n\n_c = UpdateMovie;\nexport default UpdateMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMovie\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/UpdateMovie.js"],"names":["React","useState","useQuery","gql","useParams","UpdateMovie","id","QUERY_MOVIES","UPDATE_MOVIE","data","error","loading","variables","name","setName","description","setDescription","updateMOVIE","useMutation","handleUpdateMovie","event","preventDefault","movieById","target","value","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,uBAAP;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;AACA,SAASC,SAAT,QAAyB,cAAzB;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAASF,SAAS,EAAxB;AACA,QAAMG,YAAY,GAAGJ,GAAI;AAC3B;AACA,qBAAqBG,EAAG;AACxB;AACA;AACA;AACA;AACA;AACA,QARE;AASE,QAAME,YAAY,GAAGL,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KATI;AAUF,QAAM;AAACM,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAwBT,QAAQ,CAACK,YAAD,EAAc;AAAEK,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF;AAAb,GAAd,CAAtC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgB,WAAD,IAAgBC,WAAW,CAACV,YAAD,CAAjC;;AAEA,WAASW,iBAAT,CAA2BC,KAA3B,EAAkC;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAJ,IAAAA,WAAW,CAAC;AAAEL,MAAAA,SAAS,EAAE;AAAEN,QAAAA,EAAF;AAAMO,QAAAA,IAAN;AAAYE,QAAAA;AAAZ;AAAb,KAAD,CAAX;AACD;;AAEC,sBACA;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEI,iBAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,YAAY,EAAEV,IAAI,CAACa,SAAL,CAAeT,IAAjD;AAAuD,QAAA,QAAQ,EAAGO,KAAD,IAAWN,OAAO,CAACM,KAAK,CAACG,MAAN,CAAaC,KAAd;AAAnF;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,YAAY,EAAEf,IAAI,CAACa,SAAL,CAAeP,WAAhD;AAA6D,QAAA,QAAQ,EAAGK,KAAD,IAAWJ,cAAc,CAACI,KAAK,CAACG,MAAN,CAAaC,KAAd;AAAhG;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAS,QAAA,IAAI,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAMGd,KAAK,iBAAI;AAAA,kBAAIA,KAAK,CAACe;AAAV;AAAA;AAAA;AAAA;AAAA,cANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADA;AAYH;;GA3CQpB,W;UACQD,S,EAoBeF,Q;;;KArBvBG,W;AA6CT,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport { useState } from \"react\";\r\nimport './static/css/form.css'\r\nimport {useQuery, gql} from \"@apollo/client\";\r\nimport { useParams} from \"react-router\"\r\nfunction UpdateMovie() {\r\n  const { id } = useParams();\r\n  const QUERY_MOVIES = gql`\r\n    query{\r\n      movieById(id:${id}){\r\n        id,\r\n        name,\r\n        description\r\n      }\r\n      }\r\n       `;\r\n    const UPDATE_MOVIE = gql`\r\n      mutation updatemovie($id:Int, $name: String, $description: Stirng){\r\n        UpdateMovie(id:$id, name:$name, description:$description){\r\n          movie{\r\n            id\r\n            name\r\n            description          }\r\n        }\r\n      }\r\n    `\r\n  const {data, error, loading} =useQuery(QUERY_MOVIES,{ variables: { id } })\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [updateMOVIE] = useMutation(UPDATE_MOVIE);\r\n  \r\n  function handleUpdateMovie(event) {\r\n    event.preventDefault();\r\n    updateMOVIE({ variables: { id, name, description } });\r\n  }\r\n\r\n    return (\r\n    <div>\r\n      <form onSubmit={handleUpdateMovie}>\r\n        <input type=\"text\"  defaultValue={data.movieById.name} onChange={(event) => setName(event.target.value)} />\r\n        <input type=\"text\" defaultValue={data.movieById.description} onChange={(event) => setDescription(event.target.value)} />\r\n        <button  type=\"submit\">\r\n          Submit\r\n        </button>\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateMovie"]},"metadata":{},"sourceType":"module"}