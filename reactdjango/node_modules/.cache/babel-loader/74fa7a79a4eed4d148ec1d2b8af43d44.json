{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\UpdateBus.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { useQuery, gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateBus() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const QUERY_BUS = gql`\n\tquery{\n \t\tbusesById(id:3){\n    \tid,\n    \tname,\n    \tseat\n\t  }\n\t}\n\t   `;\n  const UPDATE_BUS = gql`\n        mutation updateBus($id:Int, $name: String, $seat: Int){\n          updateBus(id:$id, name:$name, seat:$seat){\n            bus{\n              id\n              name\n              seat         \n            }\n          }\n      }\n    `;\n  const {\n    data\n  } = useQuery(QUERY_BUS, {\n    variables: {\n      id\n    }\n  });\n  const [name, setName] = useState(data.busesById.name);\n  const [seat, setSeat] = useState(data.busesById.seat);\n  const [updateBus, {\n    error\n  }] = useMutation(UPDATE_BUS);\n\n  function handleUpdateBus(event) {\n    event.preventDefault();\n    updateBus({\n      variables: {\n        id,\n        name,\n        seat\n      }\n    }); // window.location.href =\"/ListBus\"\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdateBus,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          defaultValue: data.busesById.name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"seat\",\n          children: \"Seat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"seat\",\n          defaultValue: data.busesById.seat,\n          onChange: event => setSeat(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_s(UpdateBus, \"auCPbcEgOKKVzGbtUDoVjE6GBsg=\", false, function () {\n  return [useParams, useQuery, useMutation];\n});\n\n_c = UpdateBus;\nexport default UpdateBus;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateBus\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/UpdateBus.js"],"names":["useState","useParams","useQuery","gql","useMutation","UpdateBus","id","QUERY_BUS","UPDATE_BUS","data","variables","name","setName","busesById","seat","setSeat","updateBus","error","handleUpdateBus","event","preventDefault","target","value","message"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAAyB,cAAzB;AACA,SAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,WAAvB,QAAyC,gBAAzC;;;AAGA,SAASC,SAAT,GAAqB;AAAA;;AAEpB,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AACA,QAAMM,SAAS,GAAGJ,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KARC;AASA,QAAMK,UAAU,GAAGL,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAVC;AAYA,QAAM;AAACM,IAAAA;AAAD,MAAQP,QAAQ,CAACK,SAAD,EAAW;AAAEG,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AAAb,GAAX,CAAtB;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAACS,IAAI,CAACI,SAAL,CAAeF,IAAhB,CAAhC;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACS,IAAI,CAACI,SAAL,CAAeC,IAAhB,CAAhC;AACA,QAAM,CAACE,SAAD,EAAY;AAACC,IAAAA;AAAD,GAAZ,IAAwBb,WAAW,CAACI,UAAD,CAAzC;;AACA,WAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAJ,IAAAA,SAAS,CAAC;AAAEN,MAAAA,SAAS,EAAE;AAAEJ,QAAAA,EAAF;AAAMK,QAAAA,IAAN;AAAYG,QAAAA;AAAZ;AAAb,KAAD,CAAT,CAF4B,CAG5B;AACD;;AAEH,sBACC;AAAA,2BAEC;AAAM,MAAA,QAAQ,EAAEI,eAAhB;AAAA,8BACC;AAAA,gCACC;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,MAAxB;AAAgC,UAAA,YAAY,EAAET,IAAI,CAACI,SAAL,CAAeF,IAA7D;AAAmE,UAAA,QAAQ,EAAGQ,KAAD,IAAWP,OAAO,CAACO,KAAK,CAACE,MAAN,CAAaC,KAAd;AAA/F;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAOC;AAAA,gCACC;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,MAA1B;AAAiC,UAAA,YAAY,EAAEb,IAAI,CAACI,SAAL,CAAeC,IAA9D;AAAoE,UAAA,QAAQ,EAAGK,KAAD,IAAWJ,OAAO,CAACI,KAAK,CAACE,MAAN,CAAaC,KAAd;AAAhG;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD,eAaC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbD,EAgBGL,KAAK,iBAAI;AAAA,kBAAIA,KAAK,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,cAhBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADD;AAuBA;;GAzDQlB,S;UAEOJ,S,EAsBDC,Q,EAGgBE,W;;;KA3BtBC,S;AA2DT,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useParams} from \"react-router\"\r\nimport {useQuery, gql, useMutation} from \"@apollo/client\";\r\n\r\n\r\nfunction UpdateBus() {\r\n\t\r\n\tconst { id } = useParams();\r\n\tconst QUERY_BUS = gql`\r\n\tquery{\r\n \t\tbusesById(id:3){\r\n    \tid,\r\n    \tname,\r\n    \tseat\r\n\t  }\r\n\t}\r\n\t   `;\r\n\tconst UPDATE_BUS = gql`\r\n        mutation updateBus($id:Int, $name: String, $seat: Int){\r\n          updateBus(id:$id, name:$name, seat:$seat){\r\n            bus{\r\n              id\r\n              name\r\n              seat         \r\n            }\r\n          }\r\n      }\r\n    `;\r\n   \r\n\tconst {data} =useQuery(QUERY_BUS,{ variables: { id } })\r\n\tconst [name, setName] = useState(data.busesById.name);\r\n\tconst [seat, setSeat] = useState(data.busesById.seat);\r\n\tconst [updateBus, {error }] = useMutation(UPDATE_BUS);\r\n\tfunction handleUpdateBus(event) {\r\n    \tevent.preventDefault();\r\n\t    updateBus({ variables: { id, name, seat} });\r\n\t    // window.location.href =\"/ListBus\"\r\n\t  }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\r\n\t\t\t<form onSubmit={handleUpdateBus} >\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label htmlFor=\"name\">\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input type=\"text\" name=\"name\"  defaultValue={data.busesById.name} onChange={(event) => setName(event.target.value)}/>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<label htmlFor=\"seat\">\r\n\t\t\t\t\t\tSeat\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input type=\"number\" name=\"seat\" defaultValue={data.busesById.seat} onChange={(event) => setSeat(event.target.value)}/>\r\n\t\t\t\t</p>\r\n\t\t\t\t<button type=\"submit\">\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</button>\r\n\t\t\t\t {error && <p>{error.message}</p>}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UpdateBus"]},"metadata":{},"sourceType":"module"}