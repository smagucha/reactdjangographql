{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\reactwithdjango\\\\reactwithdjango\\\\reactdjango\\\\src\\\\components\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_MOVIES = gql`\n  query{\n\tallMovie{\n\t  id\n\t  name\n\t  description\n\t}\n}\n`;\n\nfunction Home() {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useQuery(QUERY_MOVIES, {\n    pollInterval: 500 // refetch the result every 0.5 second\n\n  }); // should handle loading status\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), \"data.allMovie.map(\", (id, name, description), \") => (\", /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/reactwithdjango/reactwithdjango/reactdjango/src/components/Home.js"],"names":["React","useQuery","gql","QUERY_MOVIES","Home","data","loading","pollInterval","id","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,gBAA5B;;AACA,MAAMC,YAAY,GAAGD,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AASA,SAASE,IAAT,GAAgB;AAAA;;AACd,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBL,QAAQ,CAChCE,YADgC,EAClB;AACZI,IAAAA,YAAY,EAAE,GADF,CACM;;AADN,GADkB,CAAlC,CADc,CAMd;;AACA,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,sBACE;AAAA,2BACI;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,yBAMoBE,EAAE,EAAEC,IAAF,EAAQC,WAN9B,0BAOE;AAAA,gCACE;AAAA,oBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3BQN,I;UACmBH,Q;;;KADnBG,I;AA6BT,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\nimport {useQuery, gql} from \"@apollo/client\";\r\nconst QUERY_MOVIES = gql`\r\n  query{\r\n\tallMovie{\r\n\t  id\r\n\t  name\r\n\t  description\r\n\t}\r\n}\r\n`;\r\nfunction Home() {\r\n  const { data, loading } = useQuery(\r\n    QUERY_MOVIES, {\r\n      pollInterval: 500 // refetch the result every 0.5 second\r\n    }\r\n  );\r\n  // should handle loading status\r\n  if (loading) return <p>Loading...</p>;\r\n  return (\r\n    <div>\r\n        <table>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>name</th>\r\n            <th>description</th>\r\n          </tr>\r\n        data.allMovie.map({ id, name, description }) => (\r\n          <tr>\r\n            <td>{id}</td>\r\n            <td>{name}</td>\r\n            <td>{description}</td>\r\n          </tr>\r\n          )\r\n        </table>      \r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Home\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}